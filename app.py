import streamlit as st
import pandas as pd
import requests
from io import StringIO
from datetime import datetime

# === –ù–ê–°–¢–†–û–ô–ö–ê ===
GOOGLE_SHEET_ID = "2PACX-1vRt6mkLcvtneR8oXZVq-NoLBqaK3Hublc8iVRNI7c_TVd3Wk00NeN9NJCCWFXxZyjy5kheBu2wu1kV7".strip()
SHEET_NAME = "–õ–∏—Å—Ç1"

url = f"https://docs.google.com/spreadsheets/d/e/{GOOGLE_SHEET_ID}/pub?output=csv&sheet={SHEET_NAME}"

# –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ requests
try:
    response = requests.get(url)
    response.raise_for_status()
    response.encoding = 'utf-8'
    df = pd.read_csv(StringIO(response.text))
except Exception as e:
    st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ Google –¢–∞–±–ª–∏—Ü—ã.")
    st.write("–ü—Ä–æ–≤–µ—Ä—å:")
    st.write("- –¢–∞–±–ª–∏—Ü–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –∫–∞–∫ CSV (–§–∞–π–ª ‚Üí –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç–µ)")
    st.write("- –ü—É–±–ª–∏—á–Ω—ã–π ID —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    st.write("- –ï—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
    st.code(f"URL: {url}")
    st.stop()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
df = df.astype(str)

if '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è' in df.columns:
    df['–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'] = pd.to_datetime(df['–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'], dayfirst=True, errors='coerce')

if '–°—Ä–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ (–¥–Ω–µ–π)' in df.columns:
    df['–°—Ä–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ (–¥–Ω–µ–π)'] = pd.to_numeric(df['–°—Ä–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ (–¥–Ω–µ–π)'], errors='coerce')

df['–ê–∫—Ç—É–∞–ª—å–Ω–æ –¥–æ'] = df['–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'] + pd.to_timedelta(df['–°—Ä–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ (–¥–Ω–µ–π)'], unit='D')
today = pd.Timestamp.today()
df['–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ'] = df['–ê–∫—Ç—É–∞–ª—å–Ω–æ –¥–æ'] < today
df['–ï—Å—Ç—å PDF'] = df['–ü—É—Ç—å –∫ PDF'].str.strip().notna() & (df['–ü—É—Ç—å –∫ PDF'].str.strip() != '')

# –î–∞—à–±–æ—Ä–¥
st.title("üìä –î–∞—à–±–æ—Ä–¥: –î–æ–ª–∂–Ω–æ—Å—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")

total = len(df)
expired = df['–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ'].sum()
missing_pdf = (~df['–ï—Å—Ç—å PDF']).sum()

col1, col2, col3 = st.columns(3)
col1.metric("–í—Å–µ–≥–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π", total)
col2.metric("–¢—Ä–µ–±—É—é—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", expired, delta_color="inverse")
col3.metric("–ù–µ—Ç PDF", missing_pdf, delta_color="inverse")

show_expired = st.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ")
df_show = df[df['–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ']] if show_expired else df

st.dataframe(df_show[[
    '–î–æ–ª–∂–Ω–æ—Å—Ç—å', '–û—Ç–¥–µ–ª', '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', '–ê–∫—Ç—É–∞–ª—å–Ω–æ –¥–æ', '–ï—Å—Ç—å PDF', '–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ'
]].style.applymap(
    lambda x: 'background-color: #ffe6e6' if x else '', subset=['–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ']
))

st.markdown(f"[–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ Google –¢–∞–±–ª–∏—Ü–µ](https://docs.google.com/spreadsheets/d/{GOOGLE_SHEET_ID.split('-')[0]})")
